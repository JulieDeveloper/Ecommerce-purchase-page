/* stylelint-disable scss/at-mixin-pattern */
@import './color';

:root {
  --header-height-mobile: 56px;
  --header-height-desktop: 60px;
  --desktop-edge-width: 10%;
  --mobile-edge-width: 1rem;
}

html,
body {
  color: var(--primary-text);
  background-color: var(--primary-bg);
}

.navbar__icon {
  display: inline-block;
  width: 21px;
  height: 21px;
  color: var(--primary-icon);
  cursor: pointer;
}

.form-row {
  margin-bottom: 16px;
  width: 100%;
}

$sizes: (
  25: 25%,
  40: 40%,
  50: 50%,
  75: 75%,
  100: 100%
);
@each $prop, $abbrev in (width: w, height: h) {
  @each $num, $val in $sizes {
    .#{$abbrev}-#{$num} {
      #{$prop}: $val;
    }
  }
}
$spacer: 1rem;
$spacers: (
  0: 0,
  1: (
    $spacer * 0.25
  ),
  2: (
    $spacer * 0.5
  ),
  3: (
    $spacer * 0.75
  ),
  4: $spacer,
  5: (
    $spacer * 1.25
  ),
  6: (
    $spacer * 1.5
  ),
  7: (
    $spacer * 1.75
  ),
  8: (
    $spacer * 2
  )
);
@each $prop, $abbrev in (margin: m, padding: p) {
  @each $num, $val in $spacers {
    .#{$abbrev}-#{$num} {
      #{$prop}: $val;
    }
    .#{$abbrev}t-#{$num} {
      #{$prop}-top: $val;
    }
    .#{$abbrev}r-#{$num} {
      #{$prop}-right: $val;
    }
    .#{$abbrev}b-#{$num} {
      #{$prop}-bottom: $val;
    }
    .#{$abbrev}l-#{$num} {
      #{$prop}-left: $val;
    }
    .#{$abbrev}x-#{$num} {
      #{$prop}-left: $val;
      #{$prop}-right: $val;
    }
    .#{$abbrev}y-#{$num} {
      #{$prop}-top: $val;
      #{$prop}-bottom: $val;
    }
  }
}

.mx-auto {
  margin-right: auto;
  margin-left: auto;
}

.d-none {
  display: none;
}

.d-inline {
  display: inline;
}

.d-inline-block {
  display: inline-block;
}

.d-block {
  display: block;
}

.d-flex {
  display: flex;
}

.flex-column {
  flex-direction: column;
}

.justify-content-start {
  justify-content: flex-start;
}

.justify-content-end {
  justify-content: flex-end;
}

.justify-content-center {
  justify-content: center;
}

.justify-content-between {
  justify-content: space-between;
}

.justify-content-around {
  justify-content: space-around;
}

.align-content-start {
  align-content: flex-start;
}

.align-content-end {
  align-content: flex-end;
}

.align-content-center {
  align-content: center;
}

.align-items-start {
  align-items: flex-start;
}

.align-items-end {
  align-items: flex-end;
}

.align-items-center {
  align-items: center;
}

.text-center {
  text-align: center;
}

.text-right {
  text-align: right;
}

.text-left {
  text-align: left;
}

.cursor-pointer {
  cursor: pointer;
}

%standard-box-shadow {
  -webkit-box-shadow: 3px 0 13px 0 rgb(100 112 134 / 10%);
  -moz-box-shadow: 3px 0 13px 0 rgb(100 112 134 / 10%);
  box-shadow: 3px 0 13px 0 rgb(100 112 134 / 10%);
}

%header-shadow {
  -webkit-box-shadow: 0 2px 12px 0 rgb(0 0 0 / 10%);
  -moz-box-shadow: 0 2px 12px 0 rgb(0 0 0 / 10%);
  box-shadow: 0 2px 12px 0 rgb(0 0 0 / 10%);
}

%input-style {
  padding: 12px;
  width: 100%;
  font-size: 12px;
  border: 1px solid var(--form-input-border);
  border-radius: 4px;
  cursor: pointer;

  &:focus {
    border-color: var(--form-input-border-focus);
  }
}

%btn-box-shadow {
  box-shadow: -1px 2px 4px rgb(0 0 0 / 40%), -1px 2px 4px rgb(255 255 255 / 90%),
    inset 0 0 0 rgb(255 255 255 / 90%), inset 0 0 0 rgb(0 0 0 / 40%);
  transition: 0.2s all;
}

@mixin getStepNum($num) {
  @for $i from 1 through $num {
    &:nth-child(#{$i}) .step__circle::after {
      content: '#{$i}';
    }
  }
}
